// Generated by CoffeeScript 1.12.2
var app;

app = angular.module("app", []);

app.controller('Root', function($scope) {
  var debugMessage, send, ws;
  ws = null;
  send = function(msg) {
    if (ws == null) {
      return;
    }
    msg = JSON.stringify(msg);
    $scope.output += "send: " + msg + "\n";
    ws.send(msg);
    if (!$scope.$$phase) {
      return $scope.$apply();
    }
  };
  $scope.connected = false;
  $scope.msg = "";
  $scope.output = "";
  $scope.ToggleConnect = function() {
    if ($scope.connected) {
      ws.close();
      return $scope.connected = false;
    } else {
      ws = new WebSocket('ws://localhost:8342/ws');
      ws.onerror = function(err) {
        $scope.output += "[ERROR] " + (JSON.stringify(err)) + "\n";
        if (!$scope.$$phase) {
          return $scope.$apply();
        }
      };
      ws.onopen = function() {
        return send({
          id: "about",
          q: "/about"
        });
      };
      ws.onclose = function() {
        $scope.output += "socket closed\n";
        $scope.connected = false;
        if (!$scope.$$phase) {
          return $scope.$apply();
        }
      };
      ws.onmessage = function(evt) {
        $scope.output += "recv: " + evt.data + "\n";
        if (!$scope.$$phase) {
          return $scope.$apply();
        }
      };
      return $scope.connected = true;
    }
  };
  $scope.OnSend = function() {
    return send(JSON.parse($scope.msg));
  };
  $scope.OnClear = function() {
    $scope.output = "";
    if (!$scope.$$phase) {
      return $scope.$apply();
    }
  };
  debugMessage = {
    debug: {
      id: "dbg",
      q: "/bind/events.debug"
    },
    unbind: {
      q: "/socket.unbind(dbg)"
    },
    fps: {
      id: "watch",
      q: "/q/stats.FPS",
      repeat: {
        freq: 0.25
      }
    },
    fps: {
      id: "watch",
      q: "/q/stats.FPS",
      repeat: {
        freq: 0.25
      }
    },
    sphere: {
      id: "watch",
      q: "/q/scene/Game/Sphere.Transform.position",
      repeat: {
        freq: 1.0
      }
    },
    stop: {
      q: "/socket.stop(watch)"
    }
  };
  return $scope.Msg = function(id) {
    return $scope.msg = JSON.stringify(debugMessage[id], null, 2);
  };
});
