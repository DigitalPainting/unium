{"version":3,"sources":["components/intro.jsx","components/navbar.jsx","components/try_now.jsx","components/tutorial_server.jsx","components/tutorial_routes.jsx","components/tutorial_gql.jsx","components/tutorial_gql2.jsx","components/tutorial_sockets.jsx","components/tutorial_examples.jsx","components/tutorial.jsx","App.js","index.js"],"names":["Intro","_this","this","react_default","a","createElement","className","Jumbotron","Button","variant","onClick","props","setPage","React","Component","NavBar","Navbar","bg","expand","Brand","TryNow","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","output","tutorial","Axios","get","url","then","res","data","setState","message","JSON","stringify","catch","e","window","open","_this2","style","paddingTop","width","margin","FormGroup","InputGroup","FormControl","value","readOnly","Append","onOpen","onTryNow","marginTop","height","Tutorial","try_now_TryNow","hasImage","error","imageData","responseType","reader","FileReader","readAsDataURL","onload","result","onerror","toString","lib_default","mode","theme","editorProps","$blockScrolling","code","fontSize","showPrintMargin","showGutter","highlightActiveLine","padding","screenshot","src","alt","Alert","pages","createFactory","activePage","n","numPages","length","items","Array","from","v","i","Pagination","Item","key","concat","active","onSelect","Prev","disabled","Next","SocketsDemo","ws","txt","div","document","getElementById","innerHTML","close","msg","Log","send","demo","WebSocket","onclose","onmessage","m","Run","id","SocketsBasicDemo","connect","onopen","q","SocketsWatcherDemo","repeat","freq","SocketsBindDemo","parse","info","tutorial_sockets_SocketsBasicDemo","tutorial_sockets_SocketsWatcherDemo","tutorial_sockets_SocketsBindDemo","_this3","_this4","href","target","name","component","TutorialServer","TutorialRoutes","TutorialGQL","TutorialGQL2","TutorialSockets","TutorialExamples","index","ListGroupItem","page","ListGroup","map","p","MenuItem","Card","header","Body","App","bind","assertThisInitialized","navbar_NavBar","intro_Intro","tutorial_Tutorial","ReactDOM","render","App_App"],"mappings":"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","file":"static/js/main.2e3aeef7.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Jumbotron, Button } from 'react-bootstrap'\r\n\r\nexport default class Intro extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className='container'>\r\n        <Jumbotron>\r\n          <h1>Unium Tutorial</h1>\r\n          <p>\r\n            Welcome to the Unium Tutorial. This will introduce you to key ideas and show how you might be able to start using it on your own projects.\r\n          </p>\r\n          <p>\r\n            This is an interactive tutorial that uses the tutorial scene. If the browser opened automatically when you ran the scene then it is all good. If not, please ensure the tutorial scene is running in the editor.\r\n          </p>\r\n          <p>\r\n            <Button variant=\"primary\" onClick={ ()=>this.props.setPage(1) }>Begin</Button>\r\n          </p>\r\n        </Jumbotron>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { Navbar } from 'react-bootstrap'\r\n\r\nexport default class NavBar extends Component {\r\n render() {\r\n\treturn (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <Navbar.Brand>\r\n        Unium Tutorial\r\n      </Navbar.Brand>    \r\n    </Navbar>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Axios from 'axios'\r\nimport { FormGroup, InputGroup, FormControl, Button } from 'react-bootstrap'\r\n\r\n\r\nexport default class TryNow extends React.Component {\r\n\r\n  constructor( props ) {\r\n    super( props )\r\n    this.state = {\r\n      output: \"\"\r\n    }\r\n  }\r\n\r\n  onTryNow() {\r\n    \r\n    var tutorial = this\r\n\r\n    Axios.get( this.props.url )\r\n    .then( (res) => {\r\n      if( res.data ) {\r\n        tutorial.setState({output: tutorial.props.message + '\\n\\n' + JSON.stringify( res.data, null, 2 ) })\r\n      } else {\r\n        tutorial.setState({output: \"Hmm, something's not right! This is what we got back ...\\n\\n\" + JSON.stringify( res, null, 2 ) })\r\n      }\r\n    })\r\n    .catch( (e) => {\r\n      tutorial.setState({output: \"Oops, something went wrong!\\nIs the game running the tutorial scene?\\n\\n\" + e })\r\n    })\r\n  }\r\n\r\n  onOpen() {\r\n    window.open( this.props.url, '_blank' );\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n        <div style={{ paddingTop: '20px', width:'80%', margin:'0 auto'}}>\r\n\r\n          <FormGroup>\r\n            <InputGroup>\r\n              <FormControl value={this.props.url} readOnly />\r\n              <InputGroup.Append>\r\n                <Button variant='info' onClick={()=>this.onOpen()}>&gt;&gt;</Button>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n          </FormGroup>\r\n\r\n          <Button variant=\"info\" onClick={()=>this.onTryNow()}>Try Now</Button>\r\n\r\n          <div style={{ marginTop: '20px' }}>\r\n            <h4>Output</h4>\r\n            <pre style={{ height: '24em' }}>\r\n              { this.state.output }\r\n            </pre>\r\n          </div>\r\n\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react'\r\nimport TryNow from './try_now.jsx'\r\n\r\nexport default class Tutorial extends React.Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <p>\r\n          Unium is an experimental library for the purposes of facilitating automated testing and tool development for your Unity games.\r\n        </p>\r\n        <p>\r\n          The main idea is twofold. Firstly, embed a web server into your project to provide an interface onto the game. Secondly, implement a query language that to some degree takes care of the tedious bits.\r\n        </p>\r\n        <p>\r\n          The advantages of a web server is that HTTP provides a technology agnostic protocol that places no restrictions on whatever tools and frameworks you wish to use. It also means it will work whether the game is running in editor, on device or on some headless server in the clouds.\r\n        </p>\r\n        <p>\r\n          Check the tutorial scene is running by clicking <b><i>Try Now</i></b> below to fetch some basic information about the game, or alternatively copy the url into your browser.\r\n        </p>\r\n\r\n        <TryNow url=\"http://localhost:8342/about\" message='It works! The game returned us some data ...' />\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react'\r\nimport Axios from 'axios'\r\nimport AceEditor from 'react-ace'\r\n\r\nimport { FormGroup, InputGroup, FormControl, Button, Alert } from 'react-bootstrap'\r\n\r\n\r\nexport default class Tutorial extends React.Component {\r\n\r\n  static url = \"http://localhost:8342/utils/screenshot\"\r\n\r\n  static code = `// register the about handler route\r\nRoutesHTTP.Add( \"/about\", HandlerUtils.HandlerAbout );\r\n  \r\n// The handler is just a function that responds with some data.\r\n// In this case it reflects some JSON data about the game.\r\n\r\npublic static void HandlerAbout( RequestAdapter req, string path )\r\n{\r\n    req.Respond( JsonReflector.Reflect( new {\r\n        Unium = Unium.Version.ToString( 2 ),\r\n        Unity = Application.unityVersion,\r\n        Mono  = Environment.Version.ToString(),\r\n        ...\r\n    }));\r\n}\r\n`\r\n\r\n  constructor( props ) {\r\n    super( props )\r\n    this.state = {\r\n      hasImage  : false,\r\n      error     : null,\r\n      imageData : null,\r\n    }\r\n  }\r\n\r\n  screenshot() {\r\n\r\n    var tutorial = this\r\n\r\n    Axios.get( Tutorial.url, { responseType:\"blob\" })\r\n    .then( (res) => {\r\n        var reader = new window.FileReader()\r\n        reader.readAsDataURL( res.data )\r\n        reader.onload = () => {\r\n          tutorial.setState({\r\n            hasImage  : true,\r\n            imageData : reader.result,\r\n            error     : null\r\n          })\r\n        }\r\n        reader.onerror = (e) => {\r\n          tutorial.setState({ error: e.toString() })\r\n        }\r\n    })\r\n    .catch( (e) => {\r\n      tutorial.setState({ error: e.toString() })\r\n    })\r\n  }\r\n\r\n  onOpen() {\r\n    window.open( Tutorial.url, '_blank' )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>\r\nRoutes map incoming requests to associated handling routines by their URL (or partial URL). You can register your own routes for custom actions.\r\n        </p>\r\n        <p>\r\nThe default routes along with the other configuration can be found in the Unium.cs file. The route handler for the 'about' route from the first example looks like this.\r\n        </p>\r\n        <center>\r\n          <AceEditor\r\n              mode=\"csharp\"\r\n              theme=\"textmate\"\r\n              editorProps={{$blockScrolling: true}}\r\n              readOnly\r\n              value={Tutorial.code}\r\n              fontSize={14}\r\n              height='280px'\r\n              width='80%'\r\n              showPrintMargin={false}\r\n              showGutter={true}\r\n              highlightActiveLine={true}\r\n            />\r\n          </center>\r\n\r\n        <hr/>\r\n        <p style={{marginTop:'20px'}}>\r\n          Handlers can return any kind of data, for example they can be used to take a screenshot.\r\n        </p>\r\n\r\n        <div style={{ padding: '3em'}}>\r\n\r\n          <FormGroup>\r\n            <InputGroup>\r\n              <FormControl value={Tutorial.url} readOnly />\r\n              <InputGroup.Append>\r\n                <Button variant='info' onClick={()=>this.onOpen()}>&gt;&gt;</Button>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n          </FormGroup>\r\n\r\n          <Button variant=\"info\" onClick={()=>this.screenshot()}>Take screenshot</Button>\r\n\r\n          { this.state.hasImage && (\r\n            <center style={{marginTop:'3em'}}>\r\n              <img src={this.state.imageData} alt='screenshot' width=\"80%\" />\r\n            </center>\r\n          )}\r\n          { this.state.error && (\r\n            <Alert variant=\"danger\">\r\n              <h4>Oops! Something went wrong :/</h4>\r\n              <p>\r\n                {this.state.error}\r\n              </p>\r\n            </Alert>\r\n          )}\r\n          \r\n        </div>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","//--------------------------------------------------------------------------------\r\n\r\nimport React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport TryNow from './try_now.jsx'\r\n\r\n//--------------------------------------------------------------------------------\r\n\r\nfunction GQL_Intro() {\r\n return <div>\r\n    <p>\r\n      GQL (Game Query Language) is an XPath-like query language that lets you retrieve data from the game, set variables and invoke functions.\r\n    </p>\r\n    <p>\r\n      It is available on a special route called <b>/q</b> and operates on a custom tree data structure. The most important node in this tree is the scene.\r\n    </p>\r\n    <p>\r\n      The query selects all the objects in the tree that match that path and returns an array of the results (in JSON format). This may be an empty array if no objects match or there is an error executing the query.\r\n    </p>\r\n    <p>\r\n      Use the numbers above to step through different GQL examples.\r\n    </p>\r\n\r\n    <TryNow url=\"http://localhost:8342/q/scene/Game/Player\" message='The game returned the player game object ...' />\r\n  </div>\r\n}\r\n\r\n//--------------------------------------------------------------------------------\r\n\r\nfunction GQL_PlayerPosition() {\r\n  return <div>\r\n    <p>\r\n      Properties can be selected with dot notation. To get the player position ...\r\n    </p>\r\n    <TryNow url=\"http://localhost:8342/q/scene/Game/Player.Transform.position\" message='The player position ...' />\r\n  </div>\r\n}\r\n\r\n//--------------------------------------------------------------------------------\r\n\r\nfunction GQL_MultipleMatches() {\r\n  return <div>\r\n    <p>\r\n      Paths can matches multiple objects. To get all the position of all the pickups ...\r\n    </p>\r\n    <TryNow url=\"http://localhost:8342/q/scene/Game/Pickup.Transform.position\" message='The positions of all game objects called Pickup' />\r\n  </div>\r\n}\r\n\r\n//--------------------------------------------------------------------------------\r\n\r\nfunction GQL_WildCards() {\r\n  return <div>\r\n    <p>\r\n      Wildcards match partial object names. To get all the names of all child objects of Game starting with P ...\r\n    </p>\r\n    <TryNow url=\"http://localhost:8342/q/scene/Game/P*.name\" message='All objects with names matching P*' />\r\n  </div>\r\n}\r\n\r\n//--------------------------------------------------------------------------------\r\n\r\nfunction GQL_WhereClauses_1() {\r\n  return <div>\r\n    <p>\r\n      Square brackets [] are used to filter objects based on an expression. If the expression evaluates to an integer it will be treated as an index into a list, otherwise it will filter the list based on the “truth” of the expression.\r\n    </p>\r\n    <p>\r\n      Find all the pickups and return the 3rd one from the list ...\r\n    </p>\r\n    <TryNow url=\"http://localhost:8342/q/scene/Game/Pickup[2].Transform.position\" message='The position of the 3rd pickup' />\r\n  </div>\r\n}\r\n\r\n//--------------------------------------------------------------------------------\r\n\r\nfunction GQL_WhereClauses_2() {\r\n  return <div>\r\n    <p>\r\n      Or filter the results. Find all the pickups whose x position is greater than or equal to 0 and return the position:\r\n    </p>\r\n    <TryNow url=\"http://localhost:8342/q/scene/Game/Pickup.Transform.position[x>=0]\" message='The positions of all the pickups with x >= 0' />\r\n  </div>\r\n}\r\n\r\n//--------------------------------------------------------------------------------\r\n\r\nfunction GQL_WhereClauses_3() {\r\n  return <div>\r\n    <p>\r\n      Find all the pickups whose x position is greater than or equal to 0 and return the RotateSpeed.\r\n    </p>\r\n    <TryNow url=\"http://localhost:8342/q/scene/Game/Pickup[Transform.position.x>=0].Pickup.RotateSpeed\" message='Rotate speeds of all pickups with x >= 0 ...' />\r\n  </div>\r\n}\r\n\r\n\r\n//--------------------------------------------------------------------------------\r\n\r\nfunction GQL_Find_1() {\r\n  return <div>\r\n    <p>\r\n      You can use // to recursively search all child nodes (from the current node)\r\n    </p>\r\n    <p>\r\n      Find all the pickups in the scene (find by name)\r\n    </p>\r\n    <TryNow url=\"http://localhost:8342/q/scene//Pickup\" message='All the Pickups in the scene' />\r\n  </div>\r\n}\r\n\r\n//--------------------------------------------------------------------------------\r\n\r\nfunction GQL_Find_2() {\r\n  return <div>\r\n    <p>\r\n      Or, find all the game objects with the Pickup tag\r\n    </p>\r\n    <TryNow url=\"http://localhost:8342/q/scene//[tag='Pickup']\" message='All the objects tagged as a Pickup' />\r\n  </div>\r\n}\r\n\r\n//--------------------------------------------------------------------------------\r\n\r\nfunction GQL_Find_3() {\r\n  return <div>\r\n    <p>\r\n      Or, by combining the recursive search with a wildcard you can find objects with specific components.\r\n    </p>\r\n    <TryNow url=\"http://localhost:8342/q/scene//*.Pickup.RotateSpeed\" message='The rotate speeds of all the Pickup components' />\r\n  </div>\r\n}\r\n\r\n\r\n//--------------------------------------------------------------------------------\r\n\r\nconst pages = [\r\n  React.createFactory( GQL_Intro ),\r\n  React.createFactory( GQL_PlayerPosition ),\r\n  React.createFactory( GQL_MultipleMatches ),\r\n  React.createFactory( GQL_WildCards ),\r\n  React.createFactory( GQL_WhereClauses_1 ),\r\n  React.createFactory( GQL_WhereClauses_2 ),\r\n  React.createFactory( GQL_WhereClauses_3 ),\r\n  React.createFactory( GQL_Find_1 ),\r\n  React.createFactory( GQL_Find_2 ),\r\n  React.createFactory( GQL_Find_3 ),\r\n]\r\n\r\n//--------------------------------------------------------------------------------\r\n\r\nexport default class Tutorial extends React.Component {\r\n\r\n  constructor( props ) {\r\n    super( props )\r\n    this.state = { activePage: 0 }\r\n  }\r\n\r\n  onSelect(n) {\r\n    this.setState({\r\n      activePage: n\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const numPages = pages.length;\r\n    const {activePage} = this.state;\r\n \r\n    const items = Array.from( {length: numPages}, (v,i) => (\r\n      <Pagination.Item\r\n        key={`page_${i}`}\r\n        active={i === activePage}\r\n        onClick={()=>this.onSelect(i)}\r\n      >\r\n        {i+1}\r\n      </Pagination.Item>\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n        \r\n        <Pagination>\r\n          <Pagination.Prev\r\n            disabled={activePage===0}\r\n            onClick={()=>this.onSelect( activePage - 1 )}\r\n          />\r\n          {items}\r\n          <Pagination.Next\r\n            disabled={activePage===numPages-1}\r\n            onClick={()=>this.onSelect( activePage + 1 )}\r\n          />\r\n        </Pagination>\r\n\r\n        { pages[ activePage ]() }\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","//--------------------------------------------------------------------------------\r\n\r\nimport React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport TryNow from './try_now.jsx'\r\n\r\n//--------------------------------------------------------------------------------\r\n\r\nfunction GQL_Actions() {\r\n return <div>\r\n    <p>\r\n      Queries can also change values or invoke functions on the selected objects.\r\n    </p>\r\n    <p>\r\n      For example, to change the rotate speed of all the pick ups.\r\n    </p>\r\n\r\n    <TryNow url=\"http://localhost:8342/q/scene//Pickup.Pickup.RotateSpeed=5\" message='Note the query returns the new values' />\r\n  </div>\r\n}\r\n\r\nfunction GQL_SetVector3() {\r\n return <div>\r\n    <p>\r\n      You can also pass Vector3 values.\r\n    </p>\r\n    <p>\r\n      To teleport the player to the origin ...\r\n    </p>\r\n\r\n    <TryNow url=\"http://localhost:8342/q/scene//Player.Transform.position={'x':0,'y':0,'z':0}\" message='Note the query returns the new values' />\r\n  </div>\r\n}\r\n\r\n\r\nfunction GQL_Functions() {\r\n return <div>\r\n    <p>\r\n      You can also call functions.\r\n    </p>\r\n    <p>\r\n      To call the MoveTo() function on the player ...\r\n    </p>\r\n\r\n    <TryNow url=\"http://localhost:8342/q/scene//Player.Player.MoveTo({'x':12,'y':1,'z':-28})\" message='Note the query returns the new values' />\r\n  </div>\r\n}\r\n\r\n//--------------------------------------------------------------------------------\r\n\r\nconst pages = [\r\n  React.createFactory( GQL_Actions ),\r\n  React.createFactory( GQL_SetVector3 ),\r\n  React.createFactory( GQL_Functions ),\r\n]\r\n\r\n//--------------------------------------------------------------------------------\r\n\r\nexport default class Tutorial extends React.Component {\r\n\r\n  constructor( props ) {\r\n    super( props )\r\n    this.state = { activePage: 0 }\r\n  }\r\n\r\n  onSelect(n) {\r\n    this.setState({ activePage: n })\r\n  }\r\n\r\n  render() {\r\n\r\n    const numPages = pages.length;\r\n    const {activePage} = this.state;\r\n \r\n    const items = Array.from( {length: numPages}, (v,i) => (\r\n      <Pagination.Item\r\n        key={`page_${i}`}\r\n        active={i === activePage}\r\n        onClick={()=>this.onSelect(i)}\r\n      >\r\n        {i+1}\r\n      </Pagination.Item>\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n        \r\n        <Pagination>\r\n          <Pagination.Prev\r\n            disabled={activePage===0}\r\n            onClick={()=>this.onSelect( activePage - 1 )}\r\n          />\r\n          {items}\r\n          <Pagination.Next\r\n            disabled={activePage===numPages-1}\r\n            onClick={()=>this.onSelect( activePage + 1 )}\r\n          />\r\n        </Pagination>\r\n\r\n        { pages[ activePage ]() }\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react'\r\nimport { Button, Pagination } from 'react-bootstrap'\r\n\r\n\r\n//--------------------------------------------------------------------------------\r\n\r\nclass SocketsDemo extends React.Component {\r\n\r\n  Log( txt ) {\r\n    var div = document.getElementById( 'output' )\r\n    if( div ) {\r\n      div.innerHTML += txt + '\\n'\r\n    }\r\n  }\r\n\r\n  constructor( props ) {\r\n    super( props )\r\n    this.state = {\r\n      ws: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    var div = document.getElementById( 'output' )\r\n    if( div ) {\r\n      div.innerHTML = ''\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if( this.state.ws ) {\r\n      this.state.ws.close()\r\n    }\r\n  }\r\n\r\n  send(msg) {\r\n    msg = JSON.stringify(msg)\r\n    this.Log( \"Sending : \" + msg )\r\n    this.state.ws.send(msg)\r\n  }\r\n\r\n  connect() {\r\n\r\n    var demo = this\r\n    var ws = new WebSocket( \"ws://localhost:8342/ws\" )\r\n\r\n    ws.onerror    = ()  => { demo.Log( \"Error connecting to game - is it running?\" ) }\r\n    ws.onclose    = ()  => { demo.Log( \"Connection closed\" ) }\r\n    ws.onmessage  = (m) => { demo.Log( \"Received: \" + m.data ) }\r\n\r\n    this.setState({ws});\r\n    // this.state.ws = ws\r\n\r\n    return ws\r\n  }\r\n\r\n  render() {\r\n   return (\r\n     <div>\r\n      <Button variant=\"info\" onClick={()=>this.Run()}>Try Now</Button>\r\n      <br/><br/>\r\n      <pre id='output'>\r\n      </pre>\r\n    </div>\r\n   )\r\n  }\r\n}\r\n\r\n//--------------------------------------------------------------------------------\r\n\r\nclass SocketsBasicDemo extends SocketsDemo {\r\n\r\n  Run() {\r\n\r\n    var demo = this\r\n    var ws = this.connect()\r\n\r\n    ws.onopen = () => {\r\n      demo.Log( \"Connected to game\" )\r\n      demo.send({ id:'some_id', q:'/about' })\r\n    };\r\n\r\n    ws.onmessage = (m) => { demo.Log( \"Received: \" + m.data ); ws.close() }\r\n  }\r\n}\r\n\r\nfunction Sockets_Basic() {\r\n return <div>\r\n    <p>\r\n      The RESTful interface is convenient but there are a couple of things it is not suitable for. Specifically, watching variables change over time and getting notifications about in-game events. This is where the web socket interface comes in.\r\n    </p>\r\n    <p>\r\n      Unium has a simple JSON message format. Queries are passed along with an (optional) id in this format:\r\n    </p>\r\n    <pre>\r\n        &#123; id: \"&lt;message id&gt;\", q: \"&lt;/query&gt;\" &#125;\r\n    </pre>\r\n    <p>\r\n      A reply is of the form\r\n    </p>\r\n    <pre>\r\n      &#123;  id: \"&lt;message id&gt;\", data: ... &#125;\r\n    </pre>\r\n    <p>\r\n      Or\r\n    </p>\r\n    <pre>\r\n      &#123; id: \"&lt;message id&gt;\", error: ... &#125;\r\n    </pre>\r\n    <p style={{marginTop:\"50px\"}}>\r\n      To see the about query in action click the button below.\r\n    </p>\r\n    <SocketsBasicDemo/>\r\n  </div>\r\n}\r\n\r\n//--------------------------------------------------------------------------------\r\n\r\nclass SocketsWatcherDemo extends SocketsDemo {\r\n\r\n  Run() {\r\n\r\n    var demo = this\r\n    var ws = this.connect()\r\n\r\n    ws.onopen = () => {\r\n      demo.Log( \"Connected to game\" )\r\n      demo.send({ id:'fps', q:'/q/stats.FPS', repeat: { freq: 1 } })\r\n    };\r\n  }\r\n}\r\n\r\nfunction Sockets_Watcher() {\r\n return <div>\r\n    <p>\r\n      Watching variables is done with \"repeaters\". Repeaters repeat the query at a given period to “sample” the results.\r\n    </p>\r\n    <p>\r\n      For example, to sample the framerate every second we send ...\r\n    </p>\r\n    <pre>\r\n      &#123; id: \"fps\", q:\"/q/stats.FPS\", repeat:&#123; freq: 1 &#125; &#125;\r\n    </pre>\r\n    <SocketsWatcherDemo/>\r\n  </div>\r\n}\r\n\r\n//--------------------------------------------------------------------------------\r\n\r\nclass SocketsBindDemo extends SocketsDemo {\r\n\r\n  Run() {\r\n\r\n    var demo = this\r\n    var ws = this.connect()\r\n\r\n    ws.onopen = () => {\r\n      demo.Log( \"Connected to game\" )\r\n      demo.send({ id:'debug', q:'/bind/events.debug' })\r\n    };\r\n\r\n    ws.onmessage = (m) => {\r\n      demo.Log( \"Recieved: \" + m.data );\r\n      var msg = JSON.parse( m.data )\r\n\r\n      if( msg.info ) {\r\n        demo.send({ id:'hello', q:'/q/scene/Game.Tutorial.SayHello()' })\r\n      } else if( msg.data && msg.id === 'hello' ) {\r\n        ws.close()\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction Sockets_Bind() {\r\n return (\r\n    <div>\r\n      <p>\r\n        Unium can “bind” to any C# event with a delegate type of Action&lt;object&gt; that is accessible in the GQL tree using the /bind route.\r\n      </p>\r\n      <p>\r\n        Any events that fire will have the same message id as the bound event. If the query successfully bound to an event it will return an 'info' message of the form below before any events are sent (otherwise an error message).\r\n      </p>\r\n      <pre>\r\n        &#123; id: \"&lt;message id&gt;\", info:\"bound\" &#125;\r\n      </pre>\r\n      <p>\r\n        For example, to get the debug output ...\r\n      </p>\r\n      <SocketsBindDemo/>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n//--------------------------------------------------------------------------------\r\n\r\nconst pages = [\r\n  React.createFactory( Sockets_Basic ),\r\n  React.createFactory( Sockets_Watcher ),\r\n  React.createFactory( Sockets_Bind ),\r\n]\r\n\r\n\r\n//--------------------------------------------------------------------------------\r\n\r\n\r\nexport default class Tutorial extends React.Component {\r\n\r\n  constructor( props ) {\r\n    super( props )\r\n    this.state = { activePage: 0 }\r\n  }\r\n\r\n  onSelect(n) {\r\n    this.setState({activePage: n})\r\n  }\r\n\r\n  render() {\r\n    const numPages = pages.length;\r\n    const {activePage} = this.state;\r\n \r\n    const items = Array.from( {length: numPages}, (v,i) => (\r\n      <Pagination.Item\r\n        key={`page_${i}`}\r\n        active={i === activePage}\r\n        onClick={()=>this.onSelect(i)}\r\n      >\r\n        {i+1}\r\n      </Pagination.Item>\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n        \r\n        <Pagination>\r\n          <Pagination.Prev\r\n            disabled={activePage===0}\r\n            onClick={()=>this.onSelect( activePage - 1 )}\r\n          />\r\n          {items}\r\n          <Pagination.Next\r\n            disabled={activePage===numPages-1}\r\n            onClick={()=>this.onSelect( activePage + 1 )}\r\n          />\r\n        </Pagination>\r\n\r\n        { pages[ activePage ]() }\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default class Tutorial extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>\r\n          Here are some simplfied examples that put it all together\r\n        </p>\r\n        <ul>\r\n          <li><a href='debug_output.html' target='_blank'>Debug Output</a></li>\r\n          <li><a href='fps_graph.html' target='_blank'>FPS Graph</a></li>\r\n          <li><a href='automated_play.html' target='_blank'>Automated Playthrough</a></li>\r\n          <li><a href='sockets.html' target='_blank'>Socket Explorer</a></li>\r\n          <li><a href='../index.html' target='_blank'>Debug Menu</a></li>\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react'\r\nimport { Button, ListGroup, ListGroupItem, Card } from 'react-bootstrap'\r\n\r\nimport TutorialServer from './tutorial_server.jsx'\r\nimport TutorialRoutes from './tutorial_routes.jsx'\r\nimport TutorialGQL from './tutorial_gql.jsx'\r\nimport TutorialGQL2 from './tutorial_gql2.jsx'\r\nimport TutorialSockets from './tutorial_sockets.jsx'\r\nimport TutorialExamples from './tutorial_examples.jsx'\r\n\r\nconst pages = [\r\n  { name: 'Intro',        component: null },\r\n  { name: 'Web Server',   component: React.createFactory( TutorialServer ) },\r\n  { name: 'Routes',       component: React.createFactory( TutorialRoutes ) },\r\n  { name: 'GQL Queries',  component: React.createFactory( TutorialGQL ) },\r\n  { name: 'GQL Actions',  component: React.createFactory( TutorialGQL2 ) },\r\n  { name: 'WebSockets',   component: React.createFactory( TutorialSockets ) },\r\n  { name: 'Examples',     component: React.createFactory( TutorialExamples ) },\r\n]\r\n\r\nexport default class Tutorial extends React.Component {\r\n\r\n  MenuItem(name,index) {\r\n    return <ListGroupItem key={index} onClick={()=>this.props.setPage(index)} active={index===0} variant={index===this.props.page ? 'success' : null}>{name}</ListGroupItem>\r\n  }\r\n\r\n  Next() {\r\n    this.props.setPage( this.props.page + 1 )\r\n  }\r\n  \r\n  render() {\r\n\r\n    const page = pages[ this.props.page ];\r\n\r\n    return (\r\n      <div className='container'>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-2\">\r\n            <ListGroup>\r\n              { pages.map( (p,i) => this.MenuItem( p.name, i ) ) }\r\n            </ListGroup>\r\n          </div>\r\n          <div className=\"col-sm-10\">\r\n            <Card header={ page.name } variant=\"primary\">\r\n              <Card.Body>\r\n                { page.component( this.props ) }\r\n                { this.props.page !== pages.length - 1 && (\r\n                  <div>\r\n                    <hr/>\r\n                    <Button className=\"pull-right\" variant=\"success\" onClick={()=>this.Next()}>Next</Button>\r\n                  </div>\r\n                )}\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","//--------------------------------------------------------------------------------\n\nimport React from 'react'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './theme.css'\n\nimport Intro from './components/intro.jsx'\nimport NavBar from './components/navbar.jsx'\nimport Tutorial from './components/tutorial.jsx'\n\nimport 'brace/mode/csharp';\nimport 'brace/theme/textmate';\nimport 'brace/mode/javascript';\n\n//--------------------------------------------------------------------------------\n\nexport default class App extends React.Component {\n\n  constructor( props ) {\n    super( props )\n    this.state    = { page:0 }\n    this.setPage  = this.setPage.bind( this )\n  }\n\n  setPage( page ) {\n    this.setState( { page:page } )\n  }\n\n  render () {\n    return (\n      <div>\n        <NavBar/>\n        <div className='container-fluid'>\n          { this.state.page===0 ? (<Intro setPage={this.setPage} />) : (<Tutorial page={this.state.page} setPage={this.setPage}/>) }\n        </div>\n      </div>\n    )\n  }\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}